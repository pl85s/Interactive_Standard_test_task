{
	"info": {
		"_postman_id": "c3df866f-fdad-4aa9-9347-3c379feec993",
		"name": "Запрос списка идентификаторов пользователей по указанному критерию",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "24292468"
	},
	"item": [
		{
			"name": "/api/test/users/male",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(null);\r",
							"    pm.expect(jsonData.idList).to.not.eql(null)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=male",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "male"
						},
						{
							"key": "age",
							"value": "22",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/female",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(null);\r",
							"    pm.expect(jsonData.idList).to.not.eql(null)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=female",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "female"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/any",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(true);\r",
							"    pm.expect(jsonData.errorCode).to.eql(0);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(null);\r",
							"    pm.expect(jsonData.idList).to.not.eql(null)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=any",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "any"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/empty",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(404);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не указан пол\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": ""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/without_params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Required String parameter 'gender' is not present\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/null",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=null",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "null"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/wrong_words",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=it",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "it"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/numbers",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=0",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "0"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/boolean",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=False",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "False"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/symbols",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=''\"\"",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "''\"\""
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/sql_injection",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=FOO'); DROP TABLE USERS#&&^^^^^!#!@$@#^$#^\"",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "FOO'); DROP TABLE USERS"
						}
					],
					"hash": "&&^^^^^!#!@$@#^$#^\""
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/script",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=<script>alert(\"I hacked this!\")</script>#&&^^^^^!#!@$@#^$#^\"",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "<script>alert(\"I hacked this!\")</script>"
						}
					],
					"hash": "&&^^^^^!#!@$@#^$#^\""
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/UPPER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=MALE",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "MALE"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/first_space",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Bad Request\");\r",
							"});\r",
							"\r",
							"pm.test(\"Проверка значений в ответе\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.isSuccess).to.eql(false);\r",
							"    pm.expect(jsonData.errorCode).to.eql(400);\r",
							"    pm.expect(jsonData.errorMessage).to.eql(\"Не верно указан пол\");\r",
							"    });"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender= male",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": " male"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "/api/test/users/delete",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 405\", function () {\r",
							"    pm.response.to.have.status(405);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"Method Not Allowed\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://hr-challenge.interactivestandard.com/api/test/users?gender=male",
					"protocol": "https",
					"host": [
						"hr-challenge",
						"interactivestandard",
						"com"
					],
					"path": [
						"api",
						"test",
						"users"
					],
					"query": [
						{
							"key": "gender",
							"value": "male"
						},
						{
							"key": "age",
							"value": "22",
							"disabled": true
						}
					]
				}
			},
			"response": []
		}
	]
}